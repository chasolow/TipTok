import streamlit as st
import requests
from io import BytesIO
from PIL import Image
import pandas as pd
from openpyxl import load_workbook, Workbook
import os

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏ –∏ –ø—Ä.
st.markdown("""
    <style>
        /* –¢–µ–∫—É—â–∏–µ —Å—Ç–∏–ª–∏ */
    </style>
""", unsafe_allow_html=True)

# URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
image_url = "https://i.postimg.cc/vZmHCG8k/big.png"
response = requests.get(image_url)
image = Image.open(BytesIO(response.content))
st.image(image)

st.markdown("<h1>–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥</h1>", unsafe_allow_html=True)

power_question = st.radio("–ï—Å—Ç—å –ª–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –º–æ—â–Ω–æ—Å—Ç—å?", ['‚ö°Ô∏è –î–∞', '‚ùå –ù–µ—Ç'], index=0)

if power_question == '‚ö°Ô∏è –î–∞':
    P = st.number_input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º–∞—Ä–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å (P, –∫–í—Ç):", min_value=0, max_value=500000, step=1, value=None)
    Pdop = st.number_input("–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø. –º–æ—â–Ω–æ—Å—Ç—å (P–¥–æ–ø, –∫–í—Ç):", min_value=0, max_value=500000, step=1, value=None)
else:
    P = st.number_input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º–∞—Ä–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å (P, –∫–í—Ç):", min_value=0, max_value=500000, step=1, value=None)
    Pdop = None

voltage_classes = {
    "–î–æ 1000 –í": 1,
    "3 - 35 –∫–í": 1.1,
    "110 –∫–í": 1.2,
    "220 –∫–í": 1.3
}
Ku = st.radio("–ö–ª–∞—Å—Å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è:", list(voltage_classes.keys()))
Ku_value = voltage_classes[Ku]

Ktg = st.radio("–ï—Å—Ç—å –ª–∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏?", ['‚úÖ –ï—Å—Ç—å', '‚ùå –ù–µ—Ç'])
schemes = st.radio("–ï—Å—Ç—å –ª–∏ —Å—Ö–µ–º—ã –ø–∏—Ç–∞–Ω–∏—è?", ['‚úÖ –ï—Å—Ç—å', '‚ùå –ù–µ—Ç'])

if schemes == '‚úÖ –ï—Å—Ç—å':
    X = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ –õ–≠–ü:", min_value=0, max_value=5000, step=1, value=None)
    Y = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–µ–º–Ω–∏–∫–æ–≤:", min_value=0, max_value=5000, step=1, value=None)
else:
    Y = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–µ–º–Ω–∏–∫–æ–≤:", min_value=0, max_value=5000, step=1, value=None)
    X = Y * 1.05

Kc = st.radio("–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è?", ['üìù –¢—Ä–µ–±—É–µ—Ç—Å—è', '‚ùå –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ Excel —Å –ª–æ–≥–∞–º–∏
def save_to_excel(data):
    file_path = r'C:\Users\wanss\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\TipTok\–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä.xlsx'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if not os.path.exists(file_path):
        st.warning(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π.")
        workbook = Workbook()  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–∏–≥—É
        sheet = workbook.active
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –Ω–æ–≤—É—é –∫–Ω–∏–≥—É
        sheet.append(['‚Ññ', '–¢–∏–ø —É—Å–ª—É–≥–∏', 'P', 'P–¥–æ–ø', 'U', '–ö–†–ú', '–°—Ö–µ–º—ã', '–£—á–∞—Å—Ç–∫–∏', '–≠–ü', '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ', '–°—Ç–æ–∏–º–æ—Å—Ç—å'])
        workbook.save(file_path)

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª Excel
        book = load_workbook(file_path)
        writer = pd.ExcelWriter(file_path, engine='openpyxl')
        writer.book = book

        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
        df_existing = pd.read_excel(file_path)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä
        next_index = len(df_existing) + 1

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ DataFrame
        df_new = pd.DataFrame(data)
        df_new.insert(0, '‚Ññ', range(next_index, next_index + len(df_new)))  # –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü —Å –ø–æ—Ä—è–¥–∫–æ–≤—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏
        df_result = pd.concat([df_existing, df_new], ignore_index=True)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        df_result.to_excel(writer, index=False)
        writer.save()
        st.success("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Excel!")

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ Excel: {e}")

# –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å—á–µ—Ç–∞
if st.button('–†–ê–°–ß–Å–¢'):
    try:
        if P <= 0:
            st.error("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
        else:
            Kp = (0.8533 * Pdop ** 0.0599 + (0.8533 * P ** 0.0599 - 0.8533 * Pdop ** 0.0599) * Pdop / P) if Pdop else 0.8533 * P ** 0.0599
            Ktg_value = 1.1 if Ktg == '‚úÖ –ï—Å—Ç—å' else 1
            Kc_value = 1.05 if Kc == 'üìù –¢—Ä–µ–±—É–µ—Ç—Å—è' else 1

            if schemes == '‚úÖ –ï—Å—Ç—å':
                Gx = 1892.9 * X ** -0.544
                Gy = 379.89 * Y ** -0.271
                Gz = 0  # Gz –Ω–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º
            else:
                Gx = 1892.9 * X ** -0.544
                Gy = 379.89 * Y ** -0.271
                Gz = 966.81 * 2 * X ** -0.424

            cost = round(((X * Gx + Y * Gy) * Kp * Ku_value * Ktg_value * Kc_value + X * Gz) / 100) * 100
            st.markdown(f"<h1 style='color: #F4B03F;'>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {cost} —Ä—É–±–ª–µ–π</h1>", unsafe_allow_html=True)

            # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ Excel
            data = {
                '–¢–∏–ø —É—Å–ª—É–≥–∏': ['–ö–≠–≠'],
                'P': [P],
                'P–¥–æ–ø': [Pdop],
                'U': [Ku],
                '–ö–†–ú': [Ktg],
                '–°—Ö–µ–º—ã': [schemes],
                '–£—á–∞—Å—Ç–∫–∏': [X],
                '–≠–ü': [Y],
                '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ': [Kc],
                '–°—Ç–æ–∏–º–æ—Å—Ç—å': [cost]
            }

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
            save_to_excel(data)

    except ZeroDivisionError:
        st.error("–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞: {e}")
