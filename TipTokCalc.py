import streamlit as st
import requests
from io import BytesIO
from PIL import Image
import pandas as pd
import os

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏
st.markdown(""" 
    <style>
        ...
    </style>
""", unsafe_allow_html=True)

# URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
image_url = "https://i.postimg.cc/vZmHCG8k/big.png"

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
response = requests.get(image_url)
image = Image.open(BytesIO(response.content))

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
st.image(image)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown("<h1>–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥</h1>", unsafe_allow_html=True)

# –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
power_question = st.radio("–ï—Å—Ç—å –ª–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –º–æ—â–Ω–æ—Å—Ç—å —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —É—Å–ª–æ–≤–∏—è–º?", ['‚ö°Ô∏è –î–∞', '‚ùå –ù–µ—Ç'], index=0)

# –ü–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –º–æ—â–Ω–æ—Å—Ç–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º number_input
if power_question == '‚ö°Ô∏è –î–∞':
    P = st.number_input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º–∞—Ä–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ (P, –∫–í—Ç):", min_value=0, max_value=500000, step=1, value=None)
    Pdop = st.number_input("–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å (P–¥–æ–ø, –∫–í—Ç):", min_value=0, max_value=500000, step=1, value=None)
else:
    P = st.number_input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º–∞—Ä–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ (P, –∫–í—Ç):", min_value=0, max_value=500000, step=1, value=None)
    Pdop = None

st.markdown("", unsafe_allow_html=True) # –†–∞–∑—Ä—ã–≤

# –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é radio
voltage_classes = {
    "–î–æ 1000 –í": 1,
    "3 - 35 –∫–í": 1.1,
    "110 –∫–í": 1.2,
    "220 –∫–í": 1.3
}
Ku = st.radio("–ö–ª–∞—Å—Å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –≤ —Ç–æ—á–∫–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:", list(voltage_classes.keys()))

# –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ Ku_value –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è
Ku_value = voltage_classes[Ku]

st.markdown("", unsafe_allow_html=True) # –†–∞–∑—Ä—ã–≤

# –í–æ–ø—Ä–æ—Å –æ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏ 
Ktg = st.radio("–ï—Å—Ç—å –ª–∏ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –ø—É–Ω–∫—Ç –ø–æ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏?", ['‚úÖ –ï—Å—Ç—å', '‚ùå –ù–µ—Ç'])

st.markdown("", unsafe_allow_html=True) # –†–∞–∑—Ä—ã–≤

# –í–æ–ø—Ä–æ—Å –æ —Å—Ö–µ–º–∞—Ö –ø–∏—Ç–∞–Ω–∏—è
schemes = st.radio("–ï—Å—Ç—å –ª–∏ —Å—Ö–µ–º—ã –ø–∏—Ç–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–µ–º–Ω–∏–∫–æ–≤ –Ω–∞ –æ–±—ä–µ–∫—Ç–µ?", ['‚úÖ –ï—Å—Ç—å', '‚ùå –ù–µ—Ç'])

if schemes == '‚úÖ –ï—Å—Ç—å':
    X = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ –õ–≠–ü –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –ø–∏—Ç–∞–Ω–∏—è –¥–æ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–µ–º–Ω–∏–∫–∞:", min_value=0, max_value=5000, step=1, value=None)
    Y = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–µ–º–Ω–∏–∫–æ–≤:", min_value=0, max_value=5000, step=1, value=None)
else:
    Y = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–µ–º–Ω–∏–∫–æ–≤:", min_value=0, max_value=5000, step=1, value=None)
    X = Y * 1.05

st.markdown("", unsafe_allow_html=True) # –†–∞–∑—Ä—ã–≤

# –í–æ–ø—Ä–æ—Å –æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è 
Kc = st.radio("–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –†–î –≤ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Å–µ—Ç—è—Ö?", ['üìù –¢—Ä–µ–±—É–µ—Ç—Å—è', '‚ùå –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'])

st.markdown("", unsafe_allow_html=True) # –†–∞–∑—Ä—ã–≤

# –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å—á–µ—Ç–∞
if st.button('–†–ê–°–ß–Å–¢'):
    try:
        if P <= 0:
            st.error("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
        else:
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
            Kp = (0.8533 * Pdop ** 0.0599 + (0.8533 * P ** 0.0599 - 0.8533 * Pdop ** 0.0599) * Pdop / P) if Pdop else 0.8533 * P ** 0.0599
            Ktg_value = 1.1 if Ktg == '‚úÖ –ï—Å—Ç—å' else 1
            Kc_value = 1.05 if Kc == 'üìù –¢—Ä–µ–±—É–µ—Ç—Å—è' else 1

            if schemes == '‚úÖ –ï—Å—Ç—å':
                Gx = 1892.9 * X ** -0.544
                Gy = 379.89 * Y ** -0.271
                Gz = 0  # Gz –Ω–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º
            else:
                Gx = 1892.9 * X ** -0.544
                Gy = 379.89 * Y ** -0.271
                Gz = 966.81 * 2 * X ** -0.424

            # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
            cost = round(((X * Gx + Y * Gy) * Kp * Ku_value * Ktg_value * Kc_value + X * Gz) / 100) * 100
            st.markdown(
                f"""
                <div style='background-color: rgba(46, 139, 87, 0.15); padding: 20px; border-radius: 10px; text-align: center;'>
                    <h1 style='color: #F4B03F;'>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {cost} —Ä—É–±–ª–µ–π</h1>
                </div>
                """,
                unsafe_allow_html=True
            )

            # –°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            statistics_file_path = r"C:\Users\wanss\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\TipTok\Calc_stat.xlsx"
            st.write(f"–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {statistics_file_path}")  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

            if os.path.isfile(statistics_file_path):
                df = pd.read_excel(statistics_file_path)
                st.write("–§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ.")  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            else:
                df = pd.DataFrame(columns=["‚Ññ", "–¢–∏–ø —É—Å–ª—É–≥–∏", "P", "P–¥–æ–ø", "U", "–ö–†–ú", "–°—Ö–µ–º—ã", "–£—á–∞—Å—Ç–∫–∏", "–≠–ü", "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ", "–°—Ç–æ–∏–º–æ—Å—Ç—å"])
                st.write("–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π DataFrame.")  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
            new_row = {
                "‚Ññ": len(df) + 1,
                "–¢–∏–ø —É—Å–ª—É–≥–∏": "–ö–≠–≠",
                "P": P,
                "P–¥–æ–ø": Pdop,
                "U": Ku,
                "–ö–†–ú": Ktg,
                "–°—Ö–µ–º—ã": schemes,
                "–£—á–∞—Å—Ç–∫–∏": X,
                "–≠–ü": Y,
                "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ": Kc,
                "–°—Ç–æ–∏–º–æ—Å—Ç—å": cost
            }

            df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
            st.write("–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É: ", new_row)  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Excel
            with pd.ExcelWriter(statistics_file_path, engine='openpyxl', mode='w' if not os.path.isfile(statistics_file_path) else 'a') as writer:
                df.to_excel(writer, index=False)
                st.write("–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ñ–∞–π–ª.")  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

    except ZeroDivisionError:
        st.error("–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.")
    except ValueError as e:
        st.error(f"–û—à–∏–±–∫–∞: {e}")
